# Generated by Django 3.2.2 on 2021-05-10 23:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('companies', '0002_auto_20210511_0025'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='flavour',
            options={'ordering': ['name'], 'verbose_name': 'flavour', 'verbose_name_plural': 'flavours'},
        ),
        migrations.AlterModelOptions(
            name='flavourcategory',
            options={'ordering': ['name'], 'verbose_name': ('flavour category',), 'verbose_name_plural': 'flavour categories'},
        ),
        migrations.AlterModelOptions(
            name='ratio',
            options={'ordering': ['vg'], 'verbose_name': 'ratio', 'verbose_name_plural': 'ratios'},
        ),
        migrations.AlterModelOptions(
            name='strength',
            options={'ordering': ['strength'], 'verbose_name': 'strength', 'verbose_name_plural': 'strengths'},
        ),
        migrations.AlterModelOptions(
            name='volume',
            options={'ordering': ['volume'], 'verbose_name': 'volume', 'verbose_name_plural': 'volumes'},
        ),
        migrations.AlterField(
            model_name='flavour',
            name='name',
            field=models.CharField(help_text="e.g. 'banana'", max_length=50, unique=True, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='flavourcategory',
            name='flavours',
            field=models.ManyToManyField(blank=True, related_name='categories', to='products.Flavour', verbose_name='flavours'),
        ),
        migrations.AlterField(
            model_name='flavourcategory',
            name='name',
            field=models.CharField(help_text="e.g. 'fruit'", max_length=50, unique=True, verbose_name='name'),
        ),
        migrations.AlterField(
            model_name='strength',
            name='strength',
            field=models.PositiveSmallIntegerField(help_text='mg', unique=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='strength'),
        ),
        migrations.AlterField(
            model_name='volume',
            name='volume',
            field=models.PositiveSmallIntegerField(help_text='ml', unique=True, validators=[django.core.validators.MinValueValidator(10)], verbose_name='volume'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('is_salt_nic', models.BooleanField(default=False, verbose_name='salt nicotine')),
                ('is_cbd', models.BooleanField(default=False, verbose_name='CBD')),
                ('purchase_url', models.URLField(help_text='full URL for product on supplier website', verbose_name='purchase URL')),
                ('image_url', models.URLField(blank=True, help_text='full URL for product image', verbose_name='image URL')),
                ('price', models.DecimalField(blank=True, decimal_places=2, help_text='GBP (Â£)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='price')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='companies.brand', verbose_name='brand')),
                ('flavours', models.ManyToManyField(related_name='products', to='products.Flavour', verbose_name='flavours')),
                ('ratio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.ratio', verbose_name='ratio')),
                ('strengths', models.ManyToManyField(related_name='products', to='products.Strength', verbose_name='strengths')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='companies.supplier', verbose_name='supplier')),
                ('volume', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='products.volume', verbose_name='volume')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
                'ordering': ['name'],
            },
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('name', ''), _negated=True), name='products_product_name_not_blank'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('purchase_url', ''), _negated=True), name='products_product_purchase_url_not_blank'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', 0)), name='products_product_price_min'),
        ),
    ]
