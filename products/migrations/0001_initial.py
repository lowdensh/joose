# Generated by Django 3.2.2 on 2021-05-10 02:43

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Flavour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g. 'banana'", max_length=50, unique=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FlavourCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g. 'fruit'", max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'flavour categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Ratio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vg', models.PositiveSmallIntegerField(help_text='%', unique=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='VG')),
            ],
            options={
                'ordering': ['vg'],
            },
        ),
        migrations.CreateModel(
            name='Strength',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength', models.PositiveSmallIntegerField(help_text='mg', unique=True, validators=[django.core.validators.MinValueValidator(0)])),
            ],
            options={
                'ordering': ['strength'],
            },
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volume', models.PositiveSmallIntegerField(help_text='ml', unique=True, validators=[django.core.validators.MinValueValidator(10)])),
            ],
            options={
                'ordering': ['volume'],
            },
        ),
        migrations.AddConstraint(
            model_name='volume',
            constraint=models.CheckConstraint(check=models.Q(('volume__gte', 10)), name='products_volume_volume_min'),
        ),
        migrations.AddConstraint(
            model_name='strength',
            constraint=models.CheckConstraint(check=models.Q(('strength__gte', 0)), name='products_strength_strength_min'),
        ),
        migrations.AddConstraint(
            model_name='ratio',
            constraint=models.CheckConstraint(check=models.Q(('vg__gte', 0), ('vg__lte', 100)), name='products_ratio_vg_valid_range'),
        ),
        migrations.AddField(
            model_name='flavourcategory',
            name='flavours',
            field=models.ManyToManyField(blank=True, related_name='categories', to='products.Flavour'),
        ),
        migrations.AddConstraint(
            model_name='flavour',
            constraint=models.CheckConstraint(check=models.Q(('name', ''), _negated=True), name='products_flavour_name_not_blank'),
        ),
        migrations.AddConstraint(
            model_name='flavourcategory',
            constraint=models.CheckConstraint(check=models.Q(('name', ''), _negated=True), name='products_flavourcategory_name_not_blank'),
        ),
    ]
