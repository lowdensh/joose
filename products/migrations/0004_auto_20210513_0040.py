# Generated by Django 3.2.2 on 2021-05-12 23:40

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('companies', '0002_auto_20210511_0025'),
        ('products', '0003_product_products_product_name_supplier_unique_together'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_salt_nic', models.BooleanField(default=False, verbose_name='salt nicotine')),
                ('is_cbd', models.BooleanField(default=False, help_text='cannabidiol', verbose_name='CBD')),
            ],
            options={
                'verbose_name': 'product variant',
                'verbose_name_plural': 'product variants',
                'ordering': ['product', 'volume', 'ratio'],
            },
        ),
        migrations.CreateModel(
            name='SupplierInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_url', models.URLField(help_text='full URL for product on supplier website', verbose_name='purchase URL')),
                ('image_url', models.URLField(blank=True, help_text='full URL for product image', verbose_name='image URL')),
                ('price', models.DecimalField(decimal_places=2, default=0.0, help_text='GBP (Â£)', max_digits=5, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='price')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, help_text='product rating by users on supplier website', max_digits=3, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='rating')),
                ('num_ratings', models.PositiveSmallIntegerField(default=0, help_text='number of product ratings by users on supplier website', validators=[django.core.validators.MinValueValidator(0)], verbose_name='number of ratings')),
            ],
            options={
                'verbose_name': 'supplier info',
                'verbose_name_plural': 'supplier infos',
                'ordering': ['supplier', 'product_variant'],
            },
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'ordering': ['name', 'brand'], 'verbose_name': 'product', 'verbose_name_plural': 'products'},
        ),
        migrations.RemoveConstraint(
            model_name='product',
            name='products_product_purchase_url_not_blank',
        ),
        migrations.RemoveConstraint(
            model_name='product',
            name='products_product_price_min',
        ),
        migrations.RemoveConstraint(
            model_name='product',
            name='products_product_name_supplier_unique_together',
        ),
        migrations.RemoveField(
            model_name='product',
            name='image_url',
        ),
        migrations.RemoveField(
            model_name='product',
            name='is_cbd',
        ),
        migrations.RemoveField(
            model_name='product',
            name='is_salt_nic',
        ),
        migrations.RemoveField(
            model_name='product',
            name='price',
        ),
        migrations.RemoveField(
            model_name='product',
            name='purchase_url',
        ),
        migrations.RemoveField(
            model_name='product',
            name='ratio',
        ),
        migrations.RemoveField(
            model_name='product',
            name='strengths',
        ),
        migrations.RemoveField(
            model_name='product',
            name='supplier',
        ),
        migrations.RemoveField(
            model_name='product',
            name='volume',
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(fields=('name', 'brand'), name='products_product_name_brand_unique_together'),
        ),
        migrations.AddField(
            model_name='supplierinfo',
            name='product_variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_infos', to='products.productvariant', verbose_name='product variant'),
        ),
        migrations.AddField(
            model_name='supplierinfo',
            name='supplier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supplier_infos', to='companies.supplier', verbose_name='supplier'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='products.product', verbose_name='product'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='ratio',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_variants', to='products.ratio', verbose_name='ratio'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='strengths',
            field=models.ManyToManyField(related_name='product_variants', to='products.Strength', verbose_name='strengths'),
        ),
        migrations.AddField(
            model_name='productvariant',
            name='volume',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_variants', to='products.volume', verbose_name='volume'),
        ),
        migrations.AddConstraint(
            model_name='supplierinfo',
            constraint=models.CheckConstraint(check=models.Q(('purchase_url', ''), _negated=True), name='products_supplierinfo_purchase_url_not_blank'),
        ),
        migrations.AddConstraint(
            model_name='supplierinfo',
            constraint=models.CheckConstraint(check=models.Q(('price__gte', 0)), name='products_supplierinfo_price_min'),
        ),
        migrations.AddConstraint(
            model_name='supplierinfo',
            constraint=models.CheckConstraint(check=models.Q(('rating__gte', 0)), name='products_supplierinfo_rating_min'),
        ),
        migrations.AddConstraint(
            model_name='supplierinfo',
            constraint=models.CheckConstraint(check=models.Q(('num_ratings__gte', 0)), name='products_supplierinfo_num_ratings_min'),
        ),
        migrations.AddConstraint(
            model_name='supplierinfo',
            constraint=models.UniqueConstraint(fields=('product_variant', 'supplier'), name='products_supplierinfo_var_supp_unique_together'),
        ),
        migrations.AddConstraint(
            model_name='productvariant',
            constraint=models.UniqueConstraint(fields=('product', 'volume', 'ratio', 'is_salt_nic'), name='products_productvariant_prod_vol_rat_salt_unique_together'),
        ),
    ]
